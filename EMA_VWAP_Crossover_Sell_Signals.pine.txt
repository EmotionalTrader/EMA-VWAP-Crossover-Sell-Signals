//@version=5
indicator("EMA VWAP Crossover Sell Signals", overlay=true)

// Input for EMAs
emaLength1 = input.int(9, title="EMA Length 1", minval=1)
emaLength2 = input.int(21, title="EMA Length 2", minval=1)

// VWAP Settings
var anchor = input.string(defval = "Session", title="Anchor Period", options=["Session", "Week", "Month"])
var offset = input.int(0, title="Offset", minval=0)
calcModeInput = input.string("Standard Deviation", "Bands Calculation Mode", options = ["Standard Deviation", "Percentage"])

// Bands Settings
bandMult_1 = input.float(1.0, title="Bands Multiplier #1", step = 0.5, minval=0)
bandMult_2 = input.float(2.0, title="Bands Multiplier #2", step = 0.5, minval=0)
bandMult_3 = input.float(3.0, title="Bands Multiplier #3", step = 0.5, minval=0)

src = hlc3
isNewPeriod = timeframe.change("D")

// Calculate EMA
emaFast = ta.ema(close, emaLength1)
emaSlow = ta.ema(close, emaLength2)

// Calculate VWAP and Bands
float vwapValue = na
float upperBandValue1 = na
float lowerBandValue1 = na
float upperBandValue2 = na
float lowerBandValue2 = na
float upperBandValue3 = na
float lowerBandValue3 = na

if not timeframe.isdwm
    [_vwap, _stdevUpper, _] = ta.vwap(src, isNewPeriod, 1)
    vwapValue := _vwap
    stdevAbs = _stdevUpper - _vwap
    bandBasis = calcModeInput == "Standard Deviation" ? stdevAbs : _vwap * 0.01
    upperBandValue1 := _vwap + bandBasis * bandMult_1
    lowerBandValue1 := _vwap - bandBasis * bandMult_1
    upperBandValue2 := _vwap + bandBasis * bandMult_2
    lowerBandValue2 := _vwap - bandBasis * bandMult_2
    upperBandValue3 := _vwap + bandBasis * bandMult_3
    lowerBandValue3 := _vwap - bandBasis * bandMult_3

// Plot VWAP and Bands
plot(vwapValue, title="VWAP", color=color.blue, offset=offset)
plot(lowerBandValue1, title="Lower Band #1", color=color.green, offset=offset)
plot(upperBandValue1, title="Upper Band #1", color=color.green, offset=offset)
plot(lowerBandValue2, title="Lower Band #2", color=color.olive, offset=offset)
plot(upperBandValue2, title="Upper Band #2", color=color.olive, offset=offset)
plot(lowerBandValue3, title="Lower Band #3", color=color.teal, offset=offset)
plot(upperBandValue3, title="Upper Band #3", color=color.teal, offset=offset)

// Generate Sell Signal
emaCrossover = ta.crossunder(emaFast, emaSlow)
findsResistanceVWAP = (close <= upperBandValue3 and close >= vwapValue) or (close <= upperBandValue1 and close >= vwapValue)

// Define conditions for Sell Signal between different Bands
sellSignalBand1ToBand2 = emaCrossover and (close <= upperBandValue1 and close >= upperBandValue2)
sellSignalBand2ToBand3 = emaCrossover and (close <= upperBandValue2 and close >= upperBandValue3)
sellSignalAboveBand3 = emaCrossover and (close > upperBandValue3)

// Generate Sell Signal
sellSignal = emaCrossover and findsResistanceVWAP

// Stop-Loss Condition
float stopLossLevel = na
if (sellSignal)
    stopLossLevel := close + 5

// Check if Stop-Loss Hit
hitStopLoss = (high >= stopLossLevel)

// Plot Sell Signal with different shades of red based on the band condition
plotshape(series=sellSignalBand1ToBand2, title="Early Sell Signal Band 1-2", location=location.abovebar, color=color.new(color.red, 0), style=shape.labeldown, text="SELL", size=size.small)
plotshape(series=sellSignalBand2ToBand3, title="Early Sell Signal Band 2-3", location=location.abovebar, color=color.new(color.orange, 0), style=shape.labeldown, text="SELL", size=size.small)
plotshape(series=sellSignalAboveBand3, title="Early Sell Signal Above Band 3", location=location.abovebar, color=color.new(color.orange, 0), style=shape.labeldown, text="SELL", size=size.small)

// Plot Sell Signal for other conditions
plotshape(series=sellSignal and not (sellSignalBand1ToBand2 or sellSignalBand2ToBand3 or sellSignalAboveBand3), title="Early Sell Signal Other", location=location.abovebar, color=color.red, style=shape.labeldown, text="SELL", size=size.small)

// Mark Wrong Signals
plotshape(series=hitStopLoss, title="Wrong Signal", location=location.belowbar, color=color.green, style=shape.labelup, text="WRONG", size=size.small)

// Background color for Sell Signal
bgcolor(sellSignal ? color.new(color.red, 90) : na)

// ----------------------
// End of script
// ----------------------